[core]
	quotepath = false
	excludesfile = /Users/galenandrew/.gitignore_global
#	editor = atom --wait
#	autocrlf = input
[user]
	name = Andrew Turner
	email = galen.turner@me.com
[mergetool]
	keepBackup = true
[push]
	default = simple
[help]
	autocorrect = 1
[alias]
	s = status -sb
	sm = submodule
	c = commit -m
	ac = commit -am
	co = checkout
	b = branch
	bl = branch -l
	bla = branch -la
	bls = for-each-ref --sort='-authordate:iso8601' --format='%(objectname:short) %(authordate:relative)%09 %(upstream:short)%09%(upstream:trackshort) %(refname:short) %(HEAD)%09%(contents:subject)' refs/heads
	bs = for-each-ref --format="%(push:track)" refs/heads
	blocal = rev-parse --abbrev-ref HEAD
	r = remote
	rl = remote -v
	rp = remote prune
	rpo = remote prune origin
	m = merge
	mnff = merge --no-ff
	a = add --all
	d = diff
	ds = diff --staged
	dw = diff --word-diff
	pl = pull --rebase
	ps = push
	psa = push --all
	unstage = reset HEAD --
	amend = commit --amend -C HEAD
	changemsg = commit --allow-empty --amend -m
	empty = commit --allow-empty -m
	last = log -1 HEAD
	slog = shortlog
	contributions = shortlog -sn
	logdiff = log --oneline --name-status
	sm-status = submodule foreach 'git status -sb'
	sm-fetchall = submodule foreach 'git fetch --all'
	sm-pull = submodule foreach 'git pull'
	sm-up = submodule foreach 'git up'
	sm-rpo = submodule foreach 'git remote prune origin'
	sm-rprune = submodule foreach 'git remote prune origin'
	sm-branch = submodule foreach 'git rev-parse --abbrev-ref HEAD'
	sm-co = !sh -c 'git submodule foreach "echo `git checkout $1`"' -
	sm-master = submodule foreach 'git checkout master'
	sm-development = submodule foreach 'git checkout development'
[color]
	ui = true
[color "status"]
	header = normal
	added = green
	changed = yellow
	untracked = cyan
	deleted = red
	removed = red
[credential]
	helper = osxkeychain
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[git-up "bundler"]
	check = true
[git-up "fetch"]
	all = true
